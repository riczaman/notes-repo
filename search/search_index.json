{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcda My Technical Notes","text":"<p>Welcome to my personal knowledge base. Here, I document new technologies, tools, and concepts I\u2019m learning to grow as a software engineer.</p>"},{"location":"#purpose","title":"Purpose","text":"<ul> <li>Keep a clear, organized record of what I learn.</li> <li>Create a quick reference I can revisit anytime.</li> <li>Share knowledge in a structured, accessible way.</li> </ul>"},{"location":"#topics-covered","title":"Topics Covered","text":"<ul> <li>Programming languages and frameworks</li> <li>DevOps tools and automation</li> <li>Cloud platforms</li> <li>Software design and architecture</li> </ul>"},{"location":"#how-to-navigate","title":"How to Navigate","text":"<p>Use the menu on the left to explore topics. Each section contains: - Overview of the technology - Step-by-step examples - Screenshots or diagrams - Key takeaways</p>"},{"location":"#example","title":"Example","text":""},{"location":"#first-topic","title":"First Topic","text":"<p>Start with Jenkins \u2014 an automation server for building, testing, and deploying software.</p>"},{"location":"topics/jenkins/","title":"Jenkins","text":""},{"location":"topics/jenkins/#jenkins-notes","title":"Jenkins Notes","text":"<p>Jenkins is an open-source automation server used for continuous integration and delivery (CI/CD).</p> <pre> python def hello(): print(\"Hello, Jenkins!\")</pre> <p><code>oo</code></p> <pre>bashdocker pull jenkins/jenkins:lts</pre> <p>tt</p> <p>!!! note \"Why Docker is useful here\"</p> <pre><code>Running Jenkins in Docker avoids messing with your local setup.\n\n```bash\ndocker pull jenkins/jenkins:lts\ndocker run -p 8080:8080 -p 50000:50000 jenkins/jenkins:lts\n```\n</code></pre>"},{"location":"topics/jenkins/#ghp_4yujryydtsn2t3boe5l7ewte3j5wmm4lfeyw","title":"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","text":""},{"location":"topics/jenkins/#overview","title":"Overview","text":"<ul> <li>Automates building, testing, and deploying software.</li> <li>Highly customizable via plugins.</li> <li>Supports pipelines written in Groovy.</li> </ul>"},{"location":"topics/jenkins/#installation","title":"Installation","text":"<p>!!! note \"Why Docker is useful here\"     Running Jenkins in Docker avoids messing with your local setup.</p> <p>```bash docker pull jenkins/jenkins:lts docker run -p 8080:8080 -p 50000:50000 jenkins/jenkins:lts</p> <p>Accessing Jenkins Open your browser: http://localhost:8080</p> <p>Retrieve the admin password:</p> <p>bash Copy Edit docker exec -it  cat /var/jenkins_home/secrets/initialAdminPassword Example Pipeline ??? example \"Click to view a basic pipeline\" groovy pipeline { agent any stages { stage('Build') { steps { echo 'Building...' } } stage('Test') { steps { echo 'Running tests...' } } stage('Deploy') { steps { echo 'Deploying...' } } } } <p>Screenshot</p> <p>Key Points Keep pipelines modular.</p> <p>Use environment variables for secrets.</p> <p>Test locally before pushing changes.</p> <p>yaml Copy Edit</p>"},{"location":"topics/jenkins/#folder-structure","title":"Folder Structure","text":"<p>docs/ index.md jenkins.md images/ jenkins-dashboard.png</p> <p>markdown Copy Edit</p> <p>If you want, I can now give you a full starter repo with: - <code>mkdocs.yml</code> preconfigured for Material theme - <code>index.md</code> - <code>jenkins.md</code> - <code>images/</code> folder - GitHub Action ready for deployment</p> <p>That way you just push and see it live. Do you want me to set that up?</p>"}]}